// Code generated by test DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package example

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
	pux "github.com/pulumi/pulumi/sdk/v3/go/pulumix"
	"simple-resource-schema/example/internal"
)

type BarResource struct {
	pulumi.ResourceState

	Foo pux.GPtrOutput[Resource, ResourceOutput] `pulumi:"foo"`
}

// NewBarResource registers a new resource with the given unique name, arguments, and options.
func NewBarResource(ctx *pulumi.Context,
	name string, args *BarResourceArgs, opts ...pulumi.ResourceOption) (*BarResource, error) {
	if args == nil {
		args = &BarResourceArgs{}
	}

	opts = internal.PkgResourceDefaultOpts(opts)
	var resource BarResource
	err := ctx.RegisterRemoteComponentResource("bar::BarResource", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

type barResourceArgs struct {
	Foo pulumi.Input[Resource] `pulumi:"foo"`
}

// The set of arguments for constructing a BarResource resource.
type BarResourceArgs struct {
	Foo pulumi.Input[*Resource]
}

func (BarResourceArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*barResourceArgs)(nil)).Elem()
}

type BarResourceOutput struct{ *pulumi.OutputState }

func (BarResourceOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BarResource)(nil)).Elem()
}

func (o BarResourceOutput) ToBarResourceOutput() BarResourceOutput {
	return o
}

func (o BarResourceOutput) ToBarResourceOutputWithContext(ctx context.Context) BarResourceOutput {
	return o
}

func (o BarResourceOutput) ToOutput(ctx context.Context) pulumix.Output[*BarResource] {
	return pulumix.Output[*BarResource]{
		OutputState: o.OutputState,
	}
}

func (o BarResourceOutput) Foo() pux.GPtrOutput[Resource, ResourceOutput] {
	return pux.Apply(o, func(v *BarResource) pux.GPtrOutput[Resource, ResourceOutput] { return v.Foo })
}

func init() {
	pulumi.RegisterOutputType(BarResourceOutput{})
}
